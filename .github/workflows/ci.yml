name: gola-ui-web
on: [push]
permissions:
  contents: read
jobs:
  dockerize:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get -y install docker-compose
        docker-compose --version
      continue-on-error: true

    - name: Install
      run: |
        docker compose -f infrastructure/build.yml --project-name ${PROJECT} run --rm install-deps
      env:
        PROJECT: gola-ui-web

    - name: Build
      run: |
        docker compose -f infrastructure/build.yml --project-name ${PROJECT} run --rm build-env
      env:
        PROJECT: gola-ui-web

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Docker build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile
        push: true
        tags: gola05/gola-ui-web:latest

  dev-deploy:
    needs: [dockerize]
    runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Kubernetes environment
        run: |
          sudo curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
          sudo apt-get update
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client
      - name: Run helm commands
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          RELEASE_NAME: gola-ui-web
          NAMESPACE: gola-frontend
          CHART_NAME: gola-ui-web
          ENV: dev
        run: |
          sudo mkdir ~/.kube
          sudo chown -R runner:runner /home/runner/.kube
          sudo chmod -R 777 /home/runner/.kube
          echo "${KUBE_CONFIG}" > ~/.kube/config
          helm list
          kubectl get node # Verify that kubernetes cluster is connected
          cd helm/${CHART_NAME}/
          helm package .
          helm lint .
          export VERSION="$(grep 'version:' Chart.yaml | awk '{ print $2}')"
          helm upgrade -f values.yaml --install ${RELEASE_NAME} ${CHART_NAME}-${VERSION}.tgz --namespace=${NAMESPACE} --timeout 10m30s
          kubectl delete pods --selector=app=${CHART_NAME} -n ${NAMESPACE} # Restart pods to make sure new version is deployed